[{"name":"#if INTERACTIVE","content":"#nowarn \"21\"\n#if INTERACTIVE","predecessors":[{"$":0,"Item":"106ad00d-ee7e-4948-a022-bf02041d60a7"}],"companions":[],"id":{"$":0,"Item":"0de17a9a-b61d-4bf2-a475-06ad980404ff"}},{"name":"System dlls","content":"#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\System.Web.dll\"\n#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\System.Core.dll\"\n","predecessors":[{"$":0,"Item":"0de17a9a-b61d-4bf2-a475-06ad980404ff"}],"companions":[],"id":{"$":0,"Item":"4d91e739-77fc-495e-8e01-cda6f26c7835"}},{"name":"WebSharper dlls","content":"#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\WebSharper.Core.dll\"\n#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\WebSharper.Collections.dll\"\n#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\WebSharper.Main.dll\"\n#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\WebSharper.UI.Next.dll\"\n#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\WebSharper.JavaScript.dll\"\n","predecessors":[{"$":0,"Item":"0de17a9a-b61d-4bf2-a475-06ad980404ff"}],"companions":[],"id":{"$":0,"Item":"e7094a13-7915-4e4a-9eac-b2a225e34a94"}},{"name":"WebSharper.Sitelets.dll\"","content":"#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\WebSharper.Sitelets.dll\"","predecessors":[],"companions":[],"id":{"$":0,"Item":"e39e08cd-7fa4-4b33-9d4d-a3b3baa0b050"}},{"name":"WebSharper UI dlls","content":"#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\WebSharper.Web.dll\"\n#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\WebSharper.UI.Next.dll\"\n","predecessors":[{"$":0,"Item":"0de17a9a-b61d-4bf2-a475-06ad980404ff"},{"$":0,"Item":"e7094a13-7915-4e4a-9eac-b2a225e34a94"}],"companions":[],"id":{"$":0,"Item":"6ccdcf8b-134a-4689-9785-5bdcb20a8c92"}},{"name":"CIPHERHtml dll","content":"#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\CIPHERHtml.dll\" ","predecessors":[{"$":0,"Item":"0de17a9a-b61d-4bf2-a475-06ad980404ff"}],"companions":[],"id":{"$":0,"Item":"9c69b4ba-0bdf-431a-a5cd-db58b9dddd8a"}},{"name":"CIPHERPrototype WebServer dlls","content":"#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\Common.dll\"\n#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\Auth.dll\"\n#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\Remote.dll\"\n#r @\"D:\\Abe\\CIPHERWorkspace\\CIPHERPrototype\\WebServer\\bin\\WebServer.exe\"","predecessors":[{"$":0,"Item":"0de17a9a-b61d-4bf2-a475-06ad980404ff"}],"companions":[],"id":{"$":0,"Item":"a28fe808-236e-4b7e-9509-51ebe21e35fc"}},{"name":"","content":"#else","predecessors":[{"$":0,"Item":"0de17a9a-b61d-4bf2-a475-06ad980404ff"}],"companions":[],"id":{"$":0,"Item":"66ab3e22-f5ed-4e75-966d-28394d24f3d7"}},{"name":"","content":"namespace Test","predecessors":[{"$":0,"Item":"66ab3e22-f5ed-4e75-966d-28394d24f3d7"}],"companions":[],"id":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"}},{"name":"","content":"#endif ","predecessors":[],"companions":[],"id":{"$":0,"Item":"106ad00d-ee7e-4948-a022-bf02041d60a7"}},{"name":"","content":"open WebSharper\nopen WebSharper.JavaScript\n","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[{"$":0,"Item":"e7094a13-7915-4e4a-9eac-b2a225e34a94"}],"companions":[],"id":{"$":0,"Item":"60bffe71-edde-4971-8327-70b9f5c578bb"}},{"name":"open WebSharper.JavaScript ","content":"open WebSharper.JavaScript ","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[{"$":0,"Item":"e7094a13-7915-4e4a-9eac-b2a225e34a94"}],"companions":[],"id":{"$":0,"Item":"17e3c5b3-3602-4b39-b80a-6ee1c0cef740"}},{"name":"","content":"open WebSharper.UI.Next\nopen WebSharper.UI.Next.Client\n","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[{"$":0,"Item":"6ccdcf8b-134a-4689-9785-5bdcb20a8c92"}],"companions":[],"id":{"$":0,"Item":"bcd0b4ef-b3c3-4fc7-93e9-afb8981420aa"}},{"name":"","content":"open CIPHERPrototype\nopen CIPHERPrototype.Val.Html\n","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[{"$":0,"Item":"9c69b4ba-0bdf-431a-a5cd-db58b9dddd8a"}],"companions":[],"id":{"$":0,"Item":"02d3bc50-4aa0-41ce-a37e-5b90a943481f"}},{"name":"type on, type attr  (UI.Next)","content":"type on   = WebSharper.UI.Next.Html.on\ntype attr = WebSharper.UI.Next.Html.attr\n","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[{"$":0,"Item":"6ccdcf8b-134a-4689-9785-5bdcb20a8c92"}],"companions":[],"id":{"$":0,"Item":"12fb5bda-7dcc-4389-9978-3bbe6f40f447"}},{"name":"module html","content":"[<JavaScript>]\nmodule html =\n","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[],"companions":[],"id":{"$":0,"Item":"495bce0a-4fb6-48fa-9158-c242d5965baa"}},{"name":"let inline classIf","content":"let inline classIf cls v = ``class`` <| Val.map (fun b -> if b then cls else \"\") (Val.fixit v)\n\nlet inline link    sc = htmlElement   \"link\"   sc\nlet inline href      v  = htmlAttribute \"href\"     v\nlet inline rel       v  = htmlAttribute \"rel\"      v","parent":{"$":0,"Item":"495bce0a-4fb6-48fa-9158-c242d5965baa"},"predecessors":[],"companions":[],"id":{"$":0,"Item":"1f1aa135-fd74-42cc-b9a5-87f380c113a9"}},{"name":"","content":"let bindIRef0 (f: 'a->IRef<string>) (view: View<'a>) = \n    let contentVar = Var.Create \"\"\n    let mutable changingIRefO : IRef<string> option = None\n\n    contentVar.View |> View.Sink (fun v -> changingIRefO |> Option.iter (fun r -> if r.Value <> v then r.Value <- v))\n\n    view |> View.Bind (fun cur ->\n        let r = f cur\n        changingIRefO    <- Some r\n        contentVar.Value <- r.Value\n        r.View\n    ) |> View.Sink (fun v -> contentVar.Value <- v)\n    contentVar\n\nlet inline bindIRef f vw = bindIRef0 f (Val.fixit vw |> Val.toView)","parent":{"$":0,"Item":"495bce0a-4fb6-48fa-9158-c242d5965baa"},"predecessors":[],"companions":[],"id":{"$":0,"Item":"c3755c07-1385-495d-bad7-a5b0fa54ac9b"}},{"name":"","content":"open html","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[{"$":0,"Item":"495bce0a-4fb6-48fa-9158-c242d5965baa"}],"companions":[],"id":{"$":0,"Item":"3709b431-1507-48ed-9487-dd49ce7be748"}},{"name":"module Template","content":"[<JavaScript>]\nmodule Template =","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[{"$":0,"Item":"60bffe71-edde-4971-8327-70b9f5c578bb"},{"$":0,"Item":"11ecbe45-3d0c-4121-a8fd-7c126b96f4a3"}],"companions":[],"id":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"}},{"name":"","content":"let container content = div <| [ ``class`` \"container\" ] @ content","parent":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"},"predecessors":[{"$":0,"Item":"02d3bc50-4aa0-41ce-a37e-5b90a943481f"},{"$":0,"Item":"081bac32-e739-4124-87eb-eb7d6f2220bc"}],"companions":[],"id":{"$":0,"Item":"8fb54777-3046-4aae-9282-33401a45c280"}},{"name":"Template.Button","content":"[<NoComparison ; NoEquality>]\ntype Button = {\n    _type   : Val<string>\n    _class  : Val<string>\n    text    : Val<string>\n    onClick : Dom.Element -> unit\n    disabled: Val<bool>\n} with\n  static member  New   = { _class   = Val.fixit \"btn\" \n                           _type    = Val.fixit \"button\" \n                           text     = Val.fixit \"Button\"\n                           onClick  = fun _ -> ()\n                           disabled = Val.fixit false\n                         }\n  member        this.Render     =         \n    button [ ``type``  <| this._type\n             ``class`` <| this._class\n             SomeAttr  <| attr.disabledDynPred (View.Const \"\") (this.disabled |> Val.toView)\n             SomeAttr  <| on.click <@ fun el _ -> this.onClick el @>\n             HtmlText  <| this.text \n           ]\n  member inline this.Class       clas = { this with _class   = Val.fixit clas }\n  member inline this.Type        typ  = { this with _type    = Val.fixit typ  }\n  member inline this.Text        txt  = { this with text     = Val.fixit txt  }\n  member inline this.Disabled    dis  = { this with disabled = Val.fixit dis  }\n  member inline this.OnClick     f    = { this with onClick = f               }","parent":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"},"predecessors":[{"$":0,"Item":"12fb5bda-7dcc-4389-9978-3bbe6f40f447"},{"$":0,"Item":"02d3bc50-4aa0-41ce-a37e-5b90a943481f"},{"$":0,"Item":"bcd0b4ef-b3c3-4fc7-93e9-afb8981420aa"}],"companions":[],"id":{"$":0,"Item":"5e1dd5fc-a27c-4b0d-821a-06cc8a27bb82"}},{"name":"Template.Input","content":"[<NoComparison ; NoEquality>]\ntype Input = {\n    _type       : Val<string>\n    _class      : Val<string>\n    placeholder : Val<string>\n    id          : string\n    var         : IRef<string>\n    prefix      : HtmlNode\n    suffix      : HtmlNode\n    content     : HtmlNode\n    prefixAdded : bool\n    suffixAdded : bool\n} with\n  static member  New(var) = { _class      = Val.fixit \"form-control\" \n                              _type       = Val.fixit \"text\" \n                              placeholder = Val.fixit \"Enter text:\"\n                              id          = \"\"\n                              content     = br []\n                              prefix      = HtmlEmpty\n                              prefixAdded = false\n                              suffix      = HtmlEmpty\n                              suffixAdded = false\n                              var         = var   \n                            }\n  static member  New(v)   = Input.New(Var.Create v)\n  member        this.Render    =         \n    let groupClass det = match det with HtmlText _  -> \"input-group-addon\" | _ -> \"input-group-btn\"\n    div [\n        if this.prefixAdded || this.suffixAdded then\n            yield ``class`` \"input-group\"\n        if this.prefixAdded then\n            yield  span     [ ``class`` <| groupClass this.prefix \n                              this.prefix       ]\n        yield Doc.Input [ Val._type        this._type\n                          Val._class       this._class\n                          attr.id          this.id  \n                          Val._placeholder this.placeholder ]\n                          this.var\n              :> Doc |> SomeDoc\n        if this.suffixAdded then\n            yield  span     [ ``class`` <| groupClass this.suffix \n                              this.suffix       ]\n      ]\n  member inline this.Class       clas = { this with _class      = Val.fixit clas                  }\n  member inline this.Type        typ  = { this with _type       = Val.fixit typ                   }\n  member inline this.Placeholder plc  = { this with placeholder = Val.fixit plc                   }\n  member inline this.Id          id   = { this with id          =       id                        }\n  member inline this.Content     c    = { this with content     =       c                         }\n  member inline this.Prefix      p    = { this with prefix      =       p    ; prefixAdded = true }\n  member inline this.Suffix      s    = { this with suffix      =       s    ; suffixAdded = true }\n  member inline this.SetVar      v    = { this with var         = v                               }\n  member inline this.Var              = this.var","parent":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"},"predecessors":[{"$":0,"Item":"12fb5bda-7dcc-4389-9978-3bbe6f40f447"},{"$":0,"Item":"bcd0b4ef-b3c3-4fc7-93e9-afb8981420aa"},{"$":0,"Item":"02d3bc50-4aa0-41ce-a37e-5b90a943481f"}],"companions":[],"id":{"$":0,"Item":"29c4d6ae-2bb7-457a-ba64-fcb7cce96a30"}},{"name":"Template.Hoverable ","content":"[<NoComparison ; NoEquality>]\ntype Hoverable = {\n    hover      : IRef<bool>\n    content    : HtmlNode seq\n} with\n  static member  New   = \n    let hover      = Var.Create false\n    { \n        hover      = hover     \n        content    = []\n    }\n  static member  Demo  = \n    let hover      = Var.Create false\n    { \n        hover      = hover     \n        content    = [ style \"flex-flow: column;\"\n                     ]\n    }\n  member        this.Render          =\n    [ classIf \"hovering\" this.hover\n      SomeAttr <| on.mouseEnter (fun _ _ -> this.hover.Value <- true )\n      SomeAttr <| on.mouseLeave (fun _ _ -> this.hover.Value <- false)\n    ] \n    |> Seq.append  this.content\n    |> div\n  member inline this.Content    c = { this with content    =       c }\n","parent":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"},"predecessors":[{"$":0,"Item":"3709b431-1507-48ed-9487-dd49ce7be748"},{"$":0,"Item":"12fb5bda-7dcc-4389-9978-3bbe6f40f447"},{"$":0,"Item":"1f1aa135-fd74-42cc-b9a5-87f380c113a9"},{"$":0,"Item":"02d3bc50-4aa0-41ce-a37e-5b90a943481f"},{"$":0,"Item":"bcd0b4ef-b3c3-4fc7-93e9-afb8981420aa"}],"companions":[],"id":{"$":0,"Item":"c7841be7-5cd5-40f3-b91c-c107b487bc0c"}},{"name":"Template.Panel","content":"[<NoComparison ; NoEquality>]\ntype Panel = {\n    _class   : Val<string>\n    _style   : Val<string>\n    title    : Val<string>\n    header   : HtmlNode seq\n    content  : HtmlNode seq\n    disabled : Val<bool>\n} with\n  static member  New   = { _class   = Val.fixit <| \"panel panel-default shadow\"\n                           _style   = Val.fixit <| \"text-align:center\" \n                           title    = Val.fixit <| \"Panel\"        \n                           header   =          [ htmlText \"Some text\"    ] \n                           content  =          [ htmlText \"Some Content\" ] \n                           disabled = Val.fixit <| Var.Create false\n                         }\n  member        this.Render          =  \n    fieldset [ SomeAttr <| attr.disabledDynPred (View.Const \"\")  (this.disabled |> Val.toView)\n               div [ ``class`` this._class\n                     div (Seq.append\n                              [ ``class`` \"panel-heading\"\n                                label [ ``class``  \"panel-title text-center\" ; htmlText this.title ]\n                              ]\n                              this.header)\n\n                     div (Seq.append\n                              [ ``class`` \"panel-body\"\n                                style     this._style \n                              ]\n                              this.content)\n                   ] \n             ]\n  member inline this.Class       clas = { this with _class   = Val.fixit clas                                        }\n  member inline this.Style       sty  = { this with _style   = Val.fixit sty                                         }\n  member inline this.Title       txt  = { this with title    = Val.fixit txt                                         }\n  member inline this.Header      h    = { this with header   =       h                                           }\n  member inline this.Content     c    = { this with content  =       c                                           }\n  member inline this.Disabled    dis  = { this with disabled =       dis                                         }\n","parent":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"},"predecessors":[{"$":0,"Item":"12fb5bda-7dcc-4389-9978-3bbe6f40f447"},{"$":0,"Item":"02d3bc50-4aa0-41ce-a37e-5b90a943481f"},{"$":0,"Item":"bcd0b4ef-b3c3-4fc7-93e9-afb8981420aa"},{"$":0,"Item":"081bac32-e739-4124-87eb-eb7d6f2220bc"}],"companions":[],"id":{"$":0,"Item":"0a11766b-f227-4b38-88a3-919d964387bf"}},{"name":"Template.TextArea","content":"[<NoComparison ; NoEquality>]\ntype TextArea = {\n    _class      : Val<string>\n    placeholder : Val<string>\n    id          : string\n    var         : IRef<string>\n} with\n  static member  New(var) = { _class      = Val.fixit \"form-control\"\n                              placeholder = Val.fixit \"Enter text:\"\n                              id          = \"\"\n                              var         = var   \n                            }\n  static member  New(v)   = TextArea.New(Var.Create v)\n  member        this.Render    =    \n    someElt \n    <| Doc.InputArea\n        [ \n          Val._class       this._class\n          attr.id          this.id  \n          Val._placeholder this.placeholder ]\n        this.var\n  member inline this.Class       clas = { this with _class      = Val.fixit clas                  }\n  member inline this.Placeholder plc  = { this with placeholder = Val.fixit plc                   }\n  member inline this.Id          id   = { this with id          =       id                        }\n  member inline this.SetVar      v    = { this with var         = v                               }\n  member inline this.Var              = this.var\n","parent":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"},"predecessors":[],"companions":[],"id":{"$":0,"Item":"3234a0bf-4541-4f2c-8bbf-b5ab3a0e415b"}},{"name":"","content":"type CodeMirror () = \n    [< Inline \"setupEditor($elt)\" >]\n    static member SetupEditor elt : CodeMirror = X<_>\n\n    [< Inline \"$this.getValue()\" >]\n    member this.GetValue() : string = X<_>\n\n    [< Inline \"$this.setValue($v)\" >]\n    member this.SetValue (v:string) : unit= X<_>\n\n    [< Inline \"$this.on($event, $f)\" >]\n    member this.On(event: string, f:(CodeMirror * obj) -> unit) : unit = X<_>","parent":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"},"predecessors":[],"companions":[],"id":{"$":0,"Item":"b6a4a730-1a02-4d2b-a051-e3d8d19c115e"}},{"name":"codemirror.js","content":"let codeMirrorIncludes =\n    div [\n        script [ src  \"/EPFileX/codemirror/scripts/intellisense.js\"                       ; ``type`` \"text/javascript\"             ]\n        script [ src  \"/EPFileX/codemirror/scripts/codemirror/codemirror.js\"              ; ``type`` \"text/javascript\"             ]\n        script [ src  \"/EPFileX/codemirror/scripts/codemirror/codemirror-intellisense.js\" ; ``type`` \"text/javascript\"             ]\n        script [ src  \"/EPFileX/codemirror/scripts/codemirror/codemirror-compiler.js\"     ; ``type`` \"text/javascript\"             ]\n        script [ src  \"/EPFileX/codemirror/scripts/codemirror/mode/fsharp.js\"             ; ``type`` \"text/javascript\"             ]\n        script [ src  \"/EPFileX/codemirror/scripts/addon/edit/matchbrackets.js\"           ; ``type`` \"text/javascript\"             ]\n        script [ src  \"/EPFileX/codemirror/scripts/addon/selection/active-line.js\"        ; ``type`` \"text/javascript\"             ]\n        script [ src  \"/EPFileX/codemirror/scripts/addon/display/fullscreen.js\"           ; ``type`` \"text/javascript\"             ]\n        script [ src  \"/EPFileX/codemirror/scripts/codemirror/mode/markdown.js\"           ; ``type`` \"text/javascript\"             ]\n        link   [ href \"/EPFileX/codemirror/content/editor.css\"                            ; ``type`` \"text/css\" ; rel \"stylesheet\" ]\n        link   [ href \"/EPFileX/codemirror/content/codemirror.css\"                        ; ``type`` \"text/css\" ; rel \"stylesheet\" ]\n        link   [ href \"/EPFileX/codemirror/content/theme/rubyblue.css\"                    ; ``type`` \"text/css\" ; rel \"stylesheet\" ]\n        link   [ href \"/EPFileX/codemirror/scripts/addon/display/fullscreen.css\"          ; ``type`` \"text/css\" ; rel \"stylesheet\" ]\n    ]","parent":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"},"predecessors":[{"$":0,"Item":"1f1aa135-fd74-42cc-b9a5-87f380c113a9"},{"$":0,"Item":"3709b431-1507-48ed-9487-dd49ce7be748"}],"companions":[],"id":{"$":0,"Item":"4180353c-9dc5-438d-862d-851539b02075"}},{"name":"Template.Code","content":"[<NoComparison ; NoEquality>]\ntype Code = {\n    _class      : Val<string>\n    id          : string\n    var         : IRef<string>\n} with\n  static member  New(var) = { _class      = Val.fixit \"\" \n                              id          = \"\"\n                              var         = var   \n                            }\n  static member  New(v)   = Code.New(Var.Create v)\n  member        this.Render    =\n    div [ \n      ``class``            this._class\n      SomeAttr <| attr.id  this.id  \n      codeMirrorIncludes\n      div [\n          style \"height: 100%;\"\n          SomeAttr <| on.afterRender (fun el -> \n             let editor = CodeMirror.SetupEditor el\n             editor.On(\"change\", fun (cm, change) -> this.var.Value <- editor.GetValue())\n             this.var.View |> View.Sink (fun v -> if editor.GetValue() <> v then editor.SetValue v)                            \n          )\n          ]\n        ]\n  member inline this.Class       clas = { this with _class      = Val.fixit clas                  }\n  member inline this.Id          id   = { this with id          =       id                        }\n  member inline this.SetVar      v    = { this with var         = v                               }\n  member inline this.Var              = this.var\n","parent":{"$":0,"Item":"e9ac2d66-474a-46a6-95fa-d369e6d703d1"},"predecessors":[{"$":0,"Item":"4180353c-9dc5-438d-862d-851539b02075"},{"$":0,"Item":"12fb5bda-7dcc-4389-9978-3bbe6f40f447"},{"$":0,"Item":"bcd0b4ef-b3c3-4fc7-93e9-afb8981420aa"},{"$":0,"Item":"02d3bc50-4aa0-41ce-a37e-5b90a943481f"},{"$":0,"Item":"b6a4a730-1a02-4d2b-a051-e3d8d19c115e"}],"companions":[],"id":{"$":0,"Item":"b03ba35c-a03c-4bbe-a373-1ce551524e56"}},{"name":"module TestCode","content":"[<JavaScript>]\nmodule TestCode =","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[{"$":0,"Item":"60bffe71-edde-4971-8327-70b9f5c578bb"},{"$":0,"Item":"1095ae38-19fc-4195-840c-c368a3a486c4"}],"companions":[],"id":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"}},{"name":"type TestNode","content":"type TestNode(nodeName, ?clearNode: bool) =\n  let baseNode = \n        match JS.Document.GetElementById nodeName with\n        | null -> let el = JS.Document.CreateElement \"div\"\n                  el.SetAttribute(\"id\", nodeName)\n                  JS.Document.Body.AppendChild el |> ignore\n                  el\n        | node -> node\n  let testNode =\n    match baseNode.ShadowRoot with\n    | null -> let e = JS.Document.CreateElement \"div\"\n              baseNode.AttachShadow(Dom.ShadowRootInit(Dom.ShadowRootMode.Open)).AppendChild e |> ignore\n              e\n    | root -> root.FirstChild :?> Dom.Element\n  do if defaultArg clearNode true then testNode.InnerHTML <- \"\"\nwith\n  new(?clearNode: bool) = TestNode(\"TestNode\", defaultArg  clearNode true)\n  member this.TestNode        = testNode","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[],"companions":[],"id":{"$":0,"Item":"f2571ac9-37ec-4d7c-9ead-9e5f79ae1be1"}},{"name":"AddBootstrap","content":"  member this.AddBootstrap() =\n    JS.Document.CreateElement \"div\"\n    |> fun el -> \n        el.InnerHTML <- \n            @\"<script src='http://code.jquery.com/jquery-3.1.1.min.js' type='text/javascript' charset='UTF-8'></script>\n            <script src='http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js' type='text/javascript' charset='UTF-8'></script>\n            <link type='text/css' rel='stylesheet' href='http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css'>\n            <link type='text/css' rel='stylesheet' href='/EPFileX/css/main.css'>\n            \"\n        testNode.AppendChild el |> ignore\n","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[{"$":0,"Item":"f2571ac9-37ec-4d7c-9ead-9e5f79ae1be1"},{"$":0,"Item":"e7094a13-7915-4e4a-9eac-b2a225e34a94"}],"companions":[],"id":{"$":0,"Item":"081bac32-e739-4124-87eb-eb7d6f2220bc"}},{"name":"testDoc (UI.Next)","content":"  member inline this.TestDoc  doc  = doc  :> Doc       |> Doc.Run this.TestNode","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[{"$":0,"Item":"f2571ac9-37ec-4d7c-9ead-9e5f79ae1be1"},{"$":0,"Item":"aba6c516-0ac9-4abe-95a2-7257d077e338"},{"$":0,"Item":"bcd0b4ef-b3c3-4fc7-93e9-afb8981420aa"},{"$":0,"Item":"6ccdcf8b-134a-4689-9785-5bdcb20a8c92"}],"companions":[],"id":{"$":0,"Item":"c110a9c9-bc3b-4be7-8e5d-f43cc75f93ed"}},{"name":"testHtmlNode (CIPHER)","content":"  member inline this.TestHtml node = node |> renderDoc |> this.TestDoc","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[{"$":0,"Item":"02d3bc50-4aa0-41ce-a37e-5b90a943481f"},{"$":0,"Item":"c110a9c9-bc3b-4be7-8e5d-f43cc75f93ed"}],"companions":[],"id":{"$":0,"Item":"3038cd62-093c-4385-aa9b-799297bd379c"}},{"name":"testFreeHtml ","content":"  member        this.FreeHtml node =\n    let freeHtml = Var.Create \"\"\n    div [\n          node\n          someElt <| Doc.InputArea [ Html.attr.placeholder \"Enter Free HTML here:\" ] freeHtml \n          SomeDoc <| Val.tag Doc.Verbatim                                            freeHtml\n    ]\n    |> this.TestHtml","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[{"$":0,"Item":"e39e08cd-7fa4-4b33-9d4d-a3b3baa0b050"},{"$":0,"Item":"4d91e739-77fc-495e-8e01-cda6f26c7835"},{"$":0,"Item":"3038cd62-093c-4385-aa9b-799297bd379c"}],"companions":[],"id":{"$":0,"Item":"456562f7-0757-4431-9aeb-d58b050cecf7"}},{"name":"testResult","content":"  member inline this.TestResult res =\n    this.AddBootstrap()\n    div [ ``class`` \"container\"\n          Template.Panel.New\n            .Title(\"Result:\")\n            .Header([])\n            .Content([ h3 [ htmlText <| sprintf \"%A\" res ; style \"font-family:monospace;\"] ])\n            .Render\n     ] |> this.TestHtml","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[{"$":0,"Item":"3038cd62-093c-4385-aa9b-799297bd379c"},{"$":0,"Item":"081bac32-e739-4124-87eb-eb7d6f2220bc"},{"$":0,"Item":"0a11766b-f227-4b38-88a3-919d964387bf"}],"companions":[],"id":{"$":0,"Item":"c47adc01-4550-4830-8df5-e1ebedaee7d0"}},{"name":"","content":"[1..10] |> Seq.take 5 |> Seq.toArray\n|> TestNode().TestResult","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[{"$":0,"Item":"c47adc01-4550-4830-8df5-e1ebedaee7d0"}],"companions":[],"id":{"$":0,"Item":"74b8570e-dcd4-4dff-87a5-cd7ec96b8527"}},{"name":"Template.Button.Demo","content":"do Template.Button.New().Render \n|> TestNode().TestHtml","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[{"$":0,"Item":"3038cd62-093c-4385-aa9b-799297bd379c"},{"$":0,"Item":"5e1dd5fc-a27c-4b0d-821a-06cc8a27bb82"}],"companions":[],"id":{"$":0,"Item":"0a1fa320-b731-473a-93e2-dae49cc296f7"}},{"name":"Template.Input.Demo","content":"let inp = Template.Input.Demo\n\nlet inline h1 ch = htmlElement \"h1\" ch\n\nh2 [\n  inp.Render\n  htmlText inp.Var\n  htmlElement \"h1\" [ htmlText inp.Var ]\n  h1 [ htmlText inp.Var ]\n]\n|> TestNode().TestHtml","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[{"$":0,"Item":"456562f7-0757-4431-9aeb-d58b050cecf7"},{"$":0,"Item":"29c4d6ae-2bb7-457a-ba64-fcb7cce96a30"}],"companions":[],"id":{"$":0,"Item":"f3a7ead2-49e1-4ff4-b96e-6fe699a1c8a9"}},{"name":"Template.Code demo","content":"do Template.Code.New(\"this is a test.\").Render \n|> TestNode().TestHtml","parent":{"$":0,"Item":"e2ca8cb1-fb1e-4793-855f-55e3ca07b8f5"},"predecessors":[{"$":0,"Item":"456562f7-0757-4431-9aeb-d58b050cecf7"},{"$":0,"Item":"b03ba35c-a03c-4bbe-a373-1ce551524e56"}],"companions":[],"id":{"$":0,"Item":"f2cc3e92-5e61-47b2-982b-40f5c5784e6a"}},{"name":"module CodeEditor","content":"[<JavaScript>]\nmodule CodeEditor =\n  open Rop","parent":{"$":0,"Item":"7479dc9d-94cd-4762-a1b8-cf6e09436c3f"},"predecessors":[{"$":0,"Item":"60bffe71-edde-4971-8327-70b9f5c578bb"}],"companions":[],"id":{"$":0,"Item":"c2188026-a06a-4963-a95a-93075e5f5b6e"}},{"name":"","content":"type CodeSnippetId = CodeSnippetId of System.Guid        \nwith static member New = CodeSnippetId <| System.Guid.NewGuid()\n\ntype CodeSnippet = {\n    mutable name         : string\n    mutable content      : string\n    mutable parent       : CodeSnippetId option\n    mutable predecessors : CodeSnippetId list\n    mutable companions   : CodeSnippetId list\n    id                   : CodeSnippetId\n} with\n    member this.Name =\n        if this.name <> \"\" then this.name else \n        this.content\n            .Trim()\n            .Split([| '\\n' |], System.StringSplitOptions.RemoveEmptyEntries)\n        |> Seq.tryHead\n        |> Option.map (fun s -> s.Trim())\n        |> Option.defaultValue \"<empty>\"","parent":{"$":0,"Item":"c2188026-a06a-4963-a95a-93075e5f5b6e"},"predecessors":[],"companions":[],"id":{"$":0,"Item":"2deb54e7-009e-4297-b2bc-1c86d04203a4"}},{"name":"","content":"let missingVar  = Var.Create \"\"\nlet missing find lens k =\n    match find k with\n    | Some _ -> lens k\n    | None   -> missingVar.Lens (fun _ -> \"\") (fun _ _ -> \"\")\n","parent":{"$":0,"Item":"c2188026-a06a-4963-a95a-93075e5f5b6e"},"predecessors":[],"companions":[],"id":{"$":0,"Item":"987560b0-1fe6-4835-ad99-aed93db7da1a"}},{"name":"CodeEditorMain","content":"(*let Name name (content: string) =\n        if name <> \"\" then name else \n        content\n            .Trim()\n            .Split([| '\\n' |], System.StringSplitOptions.RemoveEmptyEntries)\n        |> Seq.tryHead\n        |> Option.map (fun s -> s.Trim())\n        |> Option.defaultValue \"<empty>\"*)\n\n\nlet currentCodeSnippetId  = Var.Create <| CodeSnippetId.New\nlet codeSnippetsStorage = WebSharper.UI.Next.Storage.LocalStorage \"CodeSnippets\" Serializer.Typed<CodeSnippet>\nlet codeSnippets        = ListModel.CreateWithStorage<CodeSnippetId, CodeSnippet> (fun s -> s.id) codeSnippetsStorage\n//    let codeSnippets        = ListModel.Create<CodeSnippetId, CodeSnippet> (fun s -> s.id) []\n\nlet tryPickI f s = s |> Seq.indexed |> Seq.filter f |> Seq.tryHead\n\ntype CodeSnippet \n    with\n    static member PickIO id = codeSnippets.Value |> tryPickI (fun (_, snp) -> snp.id = id)\n    static member FetchO id = codeSnippets.TryFindByKey id\n    static member FetchL id = CodeSnippet.FetchO id |> Option.toList\n    static member New(            pred    , cnt) = CodeSnippet.New(\"\", None   , pred, [], cnt)\n    static member New(        pa, pred    , cnt) = CodeSnippet.New(\"\", Some pa, pred, [], cnt)\n    static member New(        pa,           cnt) = CodeSnippet.New(\"\", Some pa, []  , [], cnt)\n    static member New(                      cnt) = CodeSnippet.New(\"\", None   , []  , [], cnt)\n    static member New(    nm, pa, pred, co, cnt) = CodeSnippet.New(codeSnippets.Length, nm, pa, pred, co, cnt)\n    static member New(od, nm, pa, pred, co, cnt) =\n        let newS =\n            {\n                name         = nm\n                content      = cnt\n                parent       = pa\n                predecessors = pred\n                companions   = co\n                id           = CodeSnippetId.New\n            }\n        match od, codeSnippets.Length with\n        | _, 0            -> codeSnippets.Append newS\n        | 0, _            -> codeSnippets.Set <| Seq.append [| newS |] codeSnippets.Value\n        | i, n when i < n -> codeSnippets.Value \n                                |> Seq.toArray\n                                |> Array.splitAt od\n                                |> fun (fst, snd) -> Array.append fst <| Array.append [| newS |] snd\n                                |> codeSnippets.Set \n        | _, _            -> codeSnippets.Append newS\n        newS\n    member this.UniquePredecesors() =\n        let rec preds (ins : CodeSnippetId list) outs : CodeSnippetId list =\n            match ins with\n            | []         -> outs\n            | hd :: rest -> List.collect id [ rest ; hd |> CodeSnippet.FetchL |> List.collect (fun s -> s.parent |> Option.toList |> List.append <| s.predecessors) ]\n                            |> preds <| if outs |> Seq.contains hd then outs else hd::outs\n        preds [ this.id ] []\n    member this.Level() =\n        let rec level snp out = \n            snp.parent\n            |> Option.bind CodeSnippet.FetchO\n            |> Option.map (fun p -> level p <| out + (if p.content.StartsWith \"namespace \" then 0 else 1)) \n            |> Option.defaultValue out\n        level this 0\n    member this.NameSanitized =\n        //let illegal = System.IO.Path.GetInvalidFileNameChars()\n        let illegal = [|'\"'   ; '<'   ; '>'   ; '|'   ; '\\000'; '\\001'; '\\002'; '\\003'; '\\004'; '\\005'; '\\006';\n                        '\\007'; '\\b'  ; '\\009'; '\\010'; '\\011'; '\\012'; '\\013'; '\\014'; '\\015';\n                        '\\016'; '\\017'; '\\018'; '\\019'; '\\020'; '\\021'; '\\022'; '\\023'; '\\024';\n                        '\\025'; '\\026'; '\\027'; '\\028'; '\\029'; '\\030'; '\\031'; ':'   ; '*'   ; '?';\n                        '\\\\'  ; '/'|]\n        this.Name\n        |> String.filter (fun c -> not <| Array.contains c illegal)\n        |> (fun c -> \"Code \" + c + \".fsx\")\n    member this.ContentIndented() =\n        let lvl = this.Level()\n        if lvl = 0 then this.content \n        else this.content.Split('\\n')\n                |> Array.map (fun l -> if l.StartsWith \"#\" then l else  (String.replicate lvl \"  \") + l)\n                |> String.concat \"\\n\"\n        |> sprintf \"# 1 @\\\"%s\\\"\\n%s\" this.NameSanitized\n    member this.Code() =\n        let preds = this.UniquePredecesors() |> Seq.toArray\n        codeSnippets.Value\n        |> Seq.filter (fun snp -> preds |> Array.contains snp.id)\n        |> Seq.map    (fun snp -> snp.ContentIndented()         )\n        |> String.concat \"\\n\"\n    member this.IsDescendantOf antId =\n        let rec isDescendantOf snp =\n            match snp.parent with\n            | None       -> false\n            | Some parId ->\n            if parId = antId then true else\n            CodeSnippet.FetchO parId\n            |> Option.map isDescendantOf\n            |> Option.defaultValue false\n        isDescendantOf this\n\nlet curSnippetNameOf k = missing codeSnippets.TryFindByKey <| codeSnippets.LensInto (fun s -> s.Name   ) (fun s n -> { s with name    = n }) <| k\nlet curSnippetCodeOf k = missing codeSnippets.TryFindByKey <| codeSnippets.LensInto (fun s -> s.content) (fun s n -> { s with content = n }) <| k\n    \nlet refresh       = Var.Create()\nlet refreshView b = refresh.Value <- b\n\nlet noSelection cur = CodeSnippet.FetchO cur = None\nlet noSelectionVal  = Val.map noSelection currentCodeSnippetId\n\nlet isDirectPredecessor pre cur =\n    CodeSnippet.FetchL cur \n    |> List.collect (fun snp -> snp.predecessors)\n    |> List.contains pre\n\nlet isIndirectPredecessor pre cur =\n    if isDirectPredecessor pre cur then true else\n    CodeSnippet.FetchL cur \n    |> List.collect (fun snp -> snp.UniquePredecesors())\n    |> List.contains pre \n\nlet togglePredecessorForCur pre cur =\n    if cur = pre || isIndirectPredecessor cur pre then () else\n    CodeSnippet.FetchO cur\n    |> Option.iter (fun snp ->\n        snp.predecessors <- \n            if snp.predecessors |> List.contains pre\n            then List.filter ((<>) pre)\n            else fun l -> List.Cons(pre, l)\n            <| snp.predecessors\n        refreshView()\n    )\n\nlet addCode () =\n    CodeSnippet.PickIO currentCodeSnippetId.Value\n    |> Option.map (fun (i, snp) -> CodeSnippet.New(i + 1, \"\", snp.parent, [], [], \"\"))\n    |> Option.defaultWith (fun _ -> CodeSnippet.New \"\")\n    |> fun n -> currentCodeSnippetId.Value <- n.id\n    refreshView()\n\nlet deleteCode () =\n    CodeSnippet.FetchO currentCodeSnippetId.Value\n    |> Option.iter (fun snp -> \n        currentCodeSnippetId.Value <- CodeSnippetId.New\n        codeSnippets.Remove snp\n        refreshView()\n        )\n\nlet codeVar  = Var.Create \"\"\nlet codeMsgs = Var.Create \"\"\n\nlet getCode () =\n    CodeSnippet.FetchO currentCodeSnippetId.Value \n    |> Option.iter (fun snp -> codeVar.Value <- snp.Code())\n\nlet compileRun () =\n    CodeSnippet.FetchO currentCodeSnippetId.Value \n    |> Option.iter (fun snp -> \n        codeMsgs.Value <- \"Processing...\"\n        let code = snp.Code()\n        codeVar.Value <- code\n        code\n        |> CIPHERPrototype.EditorRpc.translateClient \n        <| false \n        <| (fun (jsO, msgs) ->\n                codeMsgs.Value <-\n                    match jsO with\n                    | Some js -> try \n                                    JS.Eval \"\"\"CIPHERSpaceLoadFilesDoAfter(function() { for (key in window) { if (key.startsWith(\"StartupCode$\")) try { window[key].$cctor(); } catch (e) {} } })\"\"\" |> ignore\n                                    JS.Eval js |> ignore\n                                    \"Done!\\n\" + msgs\n                                 with e -> e.ToString()\n                    | None    -> msgs\n            ))\n\nlet reorderSnippet toId fromId =\n    let trySnippet id = tryPickI (fun (_, snp) -> snp.id = id) \n    let moving, others = codeSnippets.Value |> Seq.toArray |> Array.partition (fun snp -> snp.id = fromId || snp.IsDescendantOf fromId)\n    match trySnippet fromId moving, trySnippet toId others with\n    | Some(_, snp), Some(ti, tsn) ->\n        [| others.[0..ti - 1] ; moving ; others.[ti..] |]\n        |> Array.collect id\n        |> codeSnippets.Set\n        snp.parent <- tsn.parent\n    | _ -> ()\n    refreshView()\n\nlet indentCodeIn () =\n    CodeSnippet.PickIO currentCodeSnippetId.Value\n    |> Option.iter (fun (j, snp) ->\n        let rec doPriorUntil f i =\n            if i < 0 then () else\n            if codeSnippets.Value |> Seq.item i |> f then () else\n            doPriorUntil f (i - 1)\n        j - 1 |> doPriorUntil (fun pri ->\n            if pri.parent = snp.parent \n            then snp.parent <- Some pri.id\n                 true\n            else false\n        ) \n        refreshView()\n    )\n\nlet indentCodeOut () =\n    CodeSnippet.FetchO currentCodeSnippetId.Value\n    |> Option.iter (fun snp ->\n        snp.parent <- snp.parent\n                        |> Option.bind CodeSnippet.FetchO\n                        |> Option.bind (fun p -> p.parent) \n        refreshView()\n    )\n\nlet mutable draggedId = CodeSnippetId.New\nlet inline draggable     v  = htmlAttribute \"draggable\"    v\n\nlet listEntry code =\n    Template.Hoverable.New\n        .Content( [ \n                    ``class`` \"code-editor-list-tile\"\n                    classIf   \"selected\"              <| Val.map ((=)                   code.id) currentCodeSnippetId\n                    classIf   \"direct-predecessor\"    <| Val.map (isDirectPredecessor   code.id) currentCodeSnippetId\n                    classIf   \"indirect-predecessor\"  <| Val.map (isIndirectPredecessor code.id) currentCodeSnippetId\n                    draggable \"true\"\n                    SomeAttr <| on.dragOver(fun _ ev -> ev.PreventDefault()                                              )\n                    SomeAttr <| on.drag    (fun _ _  ->                                              draggedId <- code.id)\n                    SomeAttr <| on.drop    (fun _ ev -> ev.PreventDefault() ; reorderSnippet code.id draggedId           )\n                    div     [ ``class`` \"code-editor-list-text\"\n                              style1 \"text-indent\" (sprintf \"%dem\" <| code.Level())\n                              htmlText <| Val.map2 (fun _ _ -> code.Name) (curSnippetNameOf code.id) (curSnippetCodeOf code.id)\n                              SomeAttr <| on.click (fun _ _ -> currentCodeSnippetId.Value <- code.id)\n                            ]\n                    span    [ ``class`` \"predecessor\" \n                              SomeAttr <| on.click(fun _ _ -> togglePredecessorForCur code.id currentCodeSnippetId.Value)\n                              htmlText \"X\"\n                            ]\n                    ])\n        .Render\n\nlet fileName  = Var.Create \"\"\nlet emptyFile = Val.map (fun v -> v = \"\") fileName\n\nlet loadTextFile element (f: string -> unit) =\n    let files = element |> FileList.OfElement \n    if files.Length > 0 then\n        let  reader  = TextFileReader()\n        reader.Onload <- (fun e -> f e.Target?result)\n        reader.ReadAsText files.[0] \n\nlet fileInputElementId = \"CodeEditorFileSel\"\nlet loadFile (e: Dom.Element) =\n    loadTextFile ((e.GetRootNode().FirstChild :?> Dom.Element).QuerySelector(\"#\" + fileInputElementId))\n        (fun txt ->                 \n            txt\n            |> Json.Deserialize<CodeSnippet[]>\n            |> codeSnippets.Set\n            refreshView()\n        )\n\n[< Inline \"saveAs(new Blob([$txt], {type: 'text/plain;charset=utf-8'}), $name)\" >]\nlet saveAs (txt:string) (name:string) = ()\n\nlet downloadFile() =\n    codeSnippets.Value\n        |> Seq.toArray\n        |> Json.Serialize\n        |> saveAs <| fileName.Value\n    ","parent":{"$":0,"Item":"c2188026-a06a-4963-a95a-93075e5f5b6e"},"predecessors":[{"$":0,"Item":"e39e08cd-7fa4-4b33-9d4d-a3b3baa0b050"},{"$":0,"Item":"12fb5bda-7dcc-4389-9978-3bbe6f40f447"},{"$":0,"Item":"1f1aa135-fd74-42cc-b9a5-87f380c113a9"},{"$":0,"Item":"c7841be7-5cd5-40f3-b91c-c107b487bc0c"},{"$":0,"Item":"2deb54e7-009e-4297-b2bc-1c86d04203a4"},{"$":0,"Item":"4d91e739-77fc-495e-8e01-cda6f26c7835"},{"$":0,"Item":"a28fe808-236e-4b7e-9509-51ebe21e35fc"},{"$":0,"Item":"987560b0-1fe6-4835-ad99-aed93db7da1a"},{"$":0,"Item":"5e1dd5fc-a27c-4b0d-821a-06cc8a27bb82"},{"$":0,"Item":"29c4d6ae-2bb7-457a-ba64-fcb7cce96a30"}],"companions":[],"id":{"$":0,"Item":"07e477d3-fb6e-4c83-bb89-b4b2cce55d7b"}},{"name":"","content":"let styleEditor = \n  htmlText \"\"\"\ndiv textarea {\nfont-family: monospace;\n}\n.code-editor-list-tile {\nwhite-space: nowrap; \nborder-style: solid none none;\nborder-color: white;\nborder-width: 1px;\nbackground-color: #D8D8D8;\ndisplay: flex;\n}\n.code-editor-list-text{\npadding: 1px 10px 1px 5px;\noverflow:hidden;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\nflex: 1;\n}\n\n.code-editor-list-tile.direct-predecessor {\nfont-weight: bold;\n}\n.code-editor-list-tile.indirect-predecessor {\ncolor: blue;\n}\n.code-editor-list-tile.selected {\nbackground-color: #77F;\ncolor: white;\n}\n.code-editor-list-tile.hovering {\nbackground: lightgray;\n}\n.code-editor-list-tile.hovering.selected {\nbackground:  blue;\n}\n.code-editor-list-tile>.predecessor {\nfont-weight: bold;\nborder-style: inset;\nborder-width: 1px;\ntext-align: center;\ncolor: transparent;\n}\n.code-editor-list-tile.direct-predecessor>.predecessor {\ncolor: blue;\n}\n\n\n.CodeEditor {\n    display: grid;\n    grid-template-columns: 18% 40% auto;\n    grid-template-rows: 4% auto 17% 8%;\n    grid-template-areas:\n    \"header0 header  header\"\n    \"sidebar content1 content1\"\n    \"sidebar content2 content3\"\n    \"footer  footer  footer2\";\n    background-color: #f1f1fd;\n    color: #444;\n    height: 90vh;\n    grid-gap: 9px;\n    padding : 9px;\n}\n\n.CodeEditor > :nth-child(2){  grid-area: header  ; overflow: hidden; }\n#Snippets                  {  grid-area: sidebar ; overflow: auto  ; }\n#Code                      {  grid-area: content1; overflow: auto  ; }\n#Output                    {  grid-area: content2; overflow: auto  ; }\n#AllCode                   {  grid-area: content3; overflow: auto  ; }\n#Buttons                   {  grid-area: footer  ;                   }\n\n\n#Buttons { \n        display: grid;\n        grid-template-columns: repeat(7, 13%);\n        bxackground-color: #eee;\n        padding : 5px;\n        grid-gap: 5px;\n}\n.CodeMirror {\n    height: 100%;\n}\n\n.sliderv {\n    background-color: #eef;\n    cursor: col-resize;\n}\n.sliderh {\n    background-color: #eef;\n    cursor: row-resize;   \n}\n        \"\"\"","parent":{"$":0,"Item":"c2188026-a06a-4963-a95a-93075e5f5b6e"},"predecessors":[],"companions":[],"id":{"$":0,"Item":"fa5b4506-b26d-4387-8e04-ac7a5a90861a"}},{"name":"","content":"let CodeEditor() =\n  div [\n        ``class`` \"CodeEditor\"\n        div [ Id \"Snippets\"\n              codeSnippets.View\n              |> View.SnapshotOn codeSnippets.Value refresh.View\n              |> View.Map (Seq.map (listEntry >> renderDoc) >> Doc.Concat)\n              |> Doc.BindView id |> SomeDoc\n            ]\n        Template.Input   .New(bindIRef curSnippetNameOf currentCodeSnippetId).Prefix(htmlText \"name:\")          .Render\n        Template.Code    .New(bindIRef curSnippetCodeOf currentCodeSnippetId).Id(\"Code\"   )                     .Render\n        Template.TextArea.New(codeMsgs  ).Placeholder(\"Output:\"  )           .Id(\"Output\" )                     .Render\n        Template.TextArea.New(codeVar   ).Placeholder(\"All Code:\")           .Id(\"AllCode\")                     .Render\n        div [ Id \"Buttons\"\n              Template.Button.New.Text(\"Add code\"   ).OnClick(fun _ -> addCode      ())                         .Render\n              Template.Button.New.Text(\"<<\"         ).OnClick(fun _ -> indentCodeOut()).Disabled(noSelectionVal).Render\n              Template.Button.New.Text(\">>\"         ).OnClick(fun _ -> indentCodeIn ()).Disabled(noSelectionVal).Render\n              Template.Button.New.Text(\"Delete code\").OnClick(fun _ -> deleteCode   ()).Disabled(noSelectionVal).Render\n              Template.Button.New.Text(\"Execute\"    ).OnClick(fun _ -> compileRun   ()).Disabled(noSelectionVal).Render\n              Template.Button.New.Text(\"Get code\"   ).OnClick(fun _ -> getCode      ()).Disabled(noSelectionVal).Render\n              Template.Button.New.Text(\"Load code\"  ).OnClick(fun e -> loadFile     e ).Disabled(emptyFile     ).Render\n              Template.Button.New.Text(\"Download\"   ).OnClick(fun _ -> downloadFile ())                         .Render\n              Template.Input .New(fileName).Type(\"file\").Id(fileInputElementId)                                 .Render\n            ]\n        script [ src \"/EPFileX/FileSaver/FileSaver.js\" ; ``type`` \"text/javascript\"] \n        styleH [ styleEditor ]\n        div    [ ``class`` \"sliderv\" ; style \"width : 5px; grid-column: 2  ; grid-row: 2/4; margin-left: -7px; border: 0px; padding: 0px;\" ]\n        div    [ ``class`` \"sliderv\" ; style \"width : 5px; grid-column: 3  ; grid-row: 3  ; margin-left: -7px; border: 0px; padding: 0px;\" ]\n        div    [ ``class`` \"sliderh\" ; style \"height: 5px; grid-column: 2/4; grid-row: 3  ; margin-top : -7px; border: 0px; padding: 0px;\" ]\n     ]\n","parent":{"$":0,"Item":"c2188026-a06a-4963-a95a-93075e5f5b6e"},"predecessors":[{"$":0,"Item":"c3755c07-1385-495d-bad7-a5b0fa54ac9b"},{"$":0,"Item":"b417f7b1-5e53-4c51-a23f-6f2c8c5a77b7"},{"$":0,"Item":"3234a0bf-4541-4f2c-8bbf-b5ab3a0e415b"},{"$":0,"Item":"b03ba35c-a03c-4bbe-a373-1ce551524e56"},{"$":0,"Item":"fa5b4506-b26d-4387-8e04-ac7a5a90861a"},{"$":0,"Item":"07e477d3-fb6e-4c83-bb89-b4b2cce55d7b"}],"companions":[],"id":{"$":0,"Item":"75c3d033-99b5-409f-8ecb-cd9bd8b101ab"}},{"name":"run CodeEditor","content":"do CodeEditor ()  |> TestCode.TestNode(\"CodeEditor\").TestHtml","parent":{"$":0,"Item":"c2188026-a06a-4963-a95a-93075e5f5b6e"},"predecessors":[{"$":0,"Item":"4180353c-9dc5-438d-862d-851539b02075"},{"$":0,"Item":"75c3d033-99b5-409f-8ecb-cd9bd8b101ab"},{"$":0,"Item":"456562f7-0757-4431-9aeb-d58b050cecf7"}],"companions":[],"id":{"$":0,"Item":"4a3441c7-dd32-4f9a-b871-78647f6d6ceb"}}]